name: Build

on:
  push:
    branches:
      - main
jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ad1e5e1a4ff10b947b84059270e0b1a9
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - run: npm run build --if-present
      - run: npm test
        env:
          TEST_DATABASE_URL: postgres://postgres:ad1e5e1a4ff10b947b84059270e0b1a9@postgres:5432/postgres
          NODE_ENV: test
          API_PORT: 3000
          TOKEN_SECRET: b31106d4188fe4835761f8094e828f517b71610148111d08a275062b6899e649f713de857425e250790873fb7cae6d2dbf2793405446e8522a73b5060592f849
          TOKEN_EXPIRATION: 1800s

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
